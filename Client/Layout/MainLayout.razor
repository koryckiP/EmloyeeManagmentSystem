@using BaseLibrary.DTOs
@using ClientLibrary.Helpers
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager
@inherits LayoutComponentBase

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a class="btn btn-none" href="identity/account/login">Login</a>
            <a class="btn btn-none" href="identity/account/login">Register</a>
            <a class="btn btn-none text-danger" @oncancel="LogoutClicked">Logout</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>
@code {
    private async Task LogoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/", forceLoad: true);
    }
}